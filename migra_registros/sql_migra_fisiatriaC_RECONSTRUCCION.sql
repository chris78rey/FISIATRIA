SET TERMOUT ON
WHENEVER SQLERROR EXIT FAILURE ROLLBACK;

SET SERVEROUTPUT ON
SET LINESIZE 2000
SET PAGESIZE 10000
SET HEADING ON;
SET VERIFY ON;
SET ECHO ON;
SET FEEDBACK ON;
SET TIMING ON;
SET SQLPROMPT "";


REM EMPATADOS MANUALMENTE ------->PME     DFI
REM EMPATADOS MANUALMENTE ------->286,    127
REM EMPATADOS MANUALMENTE ------->287,    128
REM EMPATADOS MANUALMENTE ------->288,    126
REM EMPATADOS MANUALMENTE ------->289,    124
REM EMPATADOS MANUALMENTE ------->290,    101
REM EMPATADOS MANUALMENTE ------->291,    100
REM EMPATADOS MANUALMENTE ------->292,    133
REM EMPATADOS MANUALMENTE ------->293,    99
REM EMPATADOS MANUALMENTE ------->294,    98
REM EMPATADOS MANUALMENTE ------->295,    78
REM EMPATADOS MANUALMENTE ------->296,    85
REM EMPATADOS MANUALMENTE ------->297,    88
REM EMPATADOS MANUALMENTE ------->298,    75
REM EMPATADOS MANUALMENTE ------->299,    91
REM EMPATADOS MANUALMENTE ------->300,    84
REM EMPATADOS MANUALMENTE ------->301,    92
REM EMPATADOS MANUALMENTE ------->302,    90
REM EMPATADOS MANUALMENTE ------->303,    102
REM EMPATADOS MANUALMENTE ------->304,    94
REM EMPATADOS MANUALMENTE ------->305,    95
REM EMPATADOS MANUALMENTE ------->306,    96
REM EMPATADOS MANUALMENTE ------->307,    73
REM EMPATADOS MANUALMENTE ------->308,    97
REM EMPATADOS MANUALMENTE ------->309,    81
REM EMPATADOS MANUALMENTE ------->310,    89
REM EMPATADOS MANUALMENTE ------->310,    89
REM EMPATADOS MANUALMENTE ------->311,    134



COLUMN fecha FORMAT a20 NEW_VALUE fec NOPRINT

SELECT TO_CHAR (SYSDATE, 'yyyy-mm-dd-hh24-mi-ss') fecha FROM DUAL;


SPOOL  C:\logs\respaldo_RECONSTRUYE_fisiatria_&&fec..txt

REM ADMINISTRATIVO.MEF_PLANIF_TRATAM   ADMINISTRATIVO.MED_SOLICITUD_PROCEDIMIENTO
COLUMN PTR_ID FORMAT A20 TRUNC NEW_VALUE V_PTR_ID
COLUMN PAC_ID FORMAT A20 TRUNC NEW_VALUE V_PAC_ID
COLUMN CIE_ID FORMAT A20 TRUNC NEW_VALUE V_CIE_ID
COLUMN HOR_ID FORMAT A20 TRUNC NEW_VALUE V_HOR_ID
COLUMN PTR_SESIONES FORMAT A20 TRUNC NEW_VALUE V_PTR_SESIONES
COLUMN PTR_FECHA_CREACION FORMAT A20 TRUNC NEW_VALUE V_PTR_FECHA_CREACION
COLUMN PTR_FECHA_INICIO FORMAT A20 TRUNC NEW_VALUE V_PTR_FECHA_INICIO
COLUMN PTR_FECHA_FIN FORMAT A20 TRUNC NEW_VALUE V_PTR_FECHA_FIN
COLUMN PTR_ESTADO FORMAT A20 TRUNC NEW_VALUE V_PTR_ESTADO
COLUMN PTR_NUM_SESIONES FORMAT A20 TRUNC NEW_VALUE V_PTR_NUM_SESIONES
COLUMN PTR_DIAS FORMAT A20 TRUNC NEW_VALUE V_PTR_DIAS
COLUMN PTR_CODIGO_TARIFARIO FORMAT A20 TRUNC NEW_VALUE V_PTR_CODIGO_TARIFARIO
COLUMN TER_ID FORMAT A20 TRUNC NEW_VALUE V_TER_ID
COLUMN CIN_NUMERO FORMAT A20 TRUNC NEW_VALUE V_CIN_NUMERO
COLUMN PTR_HJA_EVOL FORMAT A20 TRUNC NEW_VALUE V_PTR_HJA_EVOL
COLUMN PME_ID FORMAT A20 TRUNC NEW_VALUE V_PME_ID
COLUMN PTR_TIPO_PLANIF FORMAT A20 TRUNC NEW_VALUE V_PTR_TIPO_PLANIF
COLUMN PTR_DIAGNOSTICO_MEDICO FORMAT A20 TRUNC NEW_VALUE V_PTR_DIAGNOSTICO_MEDICO
COLUMN PTR_OBSERVACION FORMAT A20 TRUNC NEW_VALUE V_PTR_OBSERVACION
COLUMN UNS_ID FORMAT A20 TRUNC NEW_VALUE V_UNS_ID


SELECT MEF_PLANIF_TRATAM.PTR_ID,
       MEF_PLANIF_TRATAM.PAC_ID,
       MEF_PLANIF_TRATAM.CIE_ID,
       MEF_PLANIF_TRATAM.HOR_ID,
       MEF_PLANIF_TRATAM.PTR_SESIONES,
       MEF_PLANIF_TRATAM.PTR_FECHA_CREACION,
       MEF_PLANIF_TRATAM.PTR_FECHA_INICIO,
       MEF_PLANIF_TRATAM.PTR_FECHA_FIN,
       MEF_PLANIF_TRATAM.PTR_ESTADO,
       MEF_PLANIF_TRATAM.PTR_NUM_SESIONES,
       MEF_PLANIF_TRATAM.PTR_DIAS,
       MEF_PLANIF_TRATAM.PTR_CODIGO_TARIFARIO,
       MEF_PLANIF_TRATAM.TER_ID,
       MEF_PLANIF_TRATAM.CIN_NUMERO,
       MEF_PLANIF_TRATAM.PTR_HJA_EVOL,
       MEF_PLANIF_TRATAM.PME_ID,
       MEF_PLANIF_TRATAM.PTR_TIPO_PLANIF,
       MEF_PLANIF_TRATAM.PTR_DIAGNOSTICO_MEDICO,
       MEF_PLANIF_TRATAM.PTR_OBSERVACION,
       MEF_PLANIF_TRATAM.UNS_ID
  FROM ADMINISTRATIVO.MEF_PLANIF_TRATAM
 WHERE MEF_PLANIF_TRATAM.PTR_ID = '&&1';



VARIABLE v_ptr VARCHAR2(100)
EXECUTE :v_ptr:= '&&V_PTR_ID'



REM aca recupero el nivel 0 el pes_id
COLUMN NIVEL0_PES_ID HEADING "NIVEL0_PES_ID" FORMAT A10  TRUNC  NEW_VALUE V_NIVEL0_PES_ID



SELECT DISTINCT V_PROCED_TRES_NIV.NIVEL0_PES_ID
  FROM ADMINISTRATIVO.AA_TERAP_1NIV, ADMINISTRATIVO.V_PROCED_TRES_NIV
 WHERE     AA_TERAP_1NIV.TER_ID = 1
       AND AA_TERAP_1NIV.PRO_ID = V_PROCED_TRES_NIV.NIVEL0_PRO_ID
       AND ter_id = '&&V_TER_ID.'
       AND ROWNUM = 1;



INSERT
  INTO ADMINISTRATIVO.MED_SOLICITUD_PROCEDIMIENTO (
          MED_SOLICITUD_PROCEDIMIENTO.SPR_ID,
          MED_SOLICITUD_PROCEDIMIENTO.PAC_ID,
          MED_SOLICITUD_PROCEDIMIENTO.CIE_ID,
          MED_SOLICITUD_PROCEDIMIENTO.PME_ID,
          MED_SOLICITUD_PROCEDIMIENTO.PES_ID,
          MED_SOLICITUD_PROCEDIMIENTO.CIN_NUMERO,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_NUM_SOLICITUD,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_SESIONES,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_FECHA_INICIO,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_FECHA_FIN,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_SESIONES_REALIZADAS,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_DIAS,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_CODIGO_TARIFARIO,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_HJA_EVOL,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_DIAGNOSTICO_MEDICO,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_OBSERVACION,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_ESTADO,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_FECHA_CREACION,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_COLOR,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_INTENSIDAD,
          MED_SOLICITUD_PROCEDIMIENTO.SPR_FECHA_AGENDADO)
VALUES (-1,
        '&&V_PAC_ID.',
        '&&V_CIE_ID.',
        '&&V_PME_ID',
        '&&V_NIVEL0_PES_ID.',
        '&&V_CIN_NUMERO',
        /*ojo*/
        '0',
        '&&V_PTR_SESIONES.',
        '&&V_PTR_FECHA_INICIO.',
        '&&V_PTR_FECHA_FIN.',
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_SESIONES_REALIZADAS*/
        NULL,
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_DIAs*/
        '&&V_PTR_DIAS.',
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_CODIGO_TARIFARIO*/
        '&&V_PTR_CODIGO_TARIFARIO.',
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_HJA_EVOL*/
        '&&V_PTR_HJA_EVOL.',
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_DIAGNOSTICO_MEDICO*/
        '&&V_PTR_DIAGNOSTICO_MEDICO.',
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_OBSERVACION*/
        '&&V_PTR_OBSERVACION',
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_ESTADO*/
        '&&V_PTR_ESTADO.',
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_FECHA_CREACION*/
        '&&V_PTR_FECHA_CREACION.',
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_COLOR*/
        NULL,
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_INTENSIDAD*/
        NULL,
        /*:MED_SOLICITUD_PROCEDIMIENTO.SPR_FECHA_AGENDADO*/
        '&&V_PTR_FECHA_INICIO.');


REM ACA SE DETERMINA LA SECUENCIA DE LA TABLA SOLICITUD PROCEDIMIENTO
REM ACA SE DETERMINA LA SECUENCIA DE LA TABLA SOLICITUD PROCEDIMIENTO
REM ACA SE DETERMINA LA SECUENCIA DE LA TABLA SOLICITUD PROCEDIMIENTO
REM ACA SE DETERMINA LA SECUENCIA DE LA TABLA SOLICITUD PROCEDIMIENTO
REM ACA SE DETERMINA LA SECUENCIA DE LA TABLA SOLICITUD PROCEDIMIENTO
REM ACA SE DETERMINA LA SECUENCIA DE LA TABLA SOLICITUD PROCEDIMIENTO
REM ACA SE DETERMINA LA SECUENCIA DE LA TABLA SOLICITUD PROCEDIMIENTO
REM ACA SE DETERMINA LA SECUENCIA DE LA TABLA SOLICITUD PROCEDIMIENTO
REM ACA SE DETERMINA LA SECUENCIA DE LA TABLA SOLICITUD PROCEDIMIENTO

COLUMN SEQ_SOLICITUD_PROCE HEADING "SEQ_SOLICITUD_PROCE" FORMAT A10  TRUNC  NEW_VALUE V_SEQ_SOLICITUD_PROCE

SELECT SEQ_MED_SOLICITUD_PROC.CURRVAL SEQ_SOLICITUD_PROCE FROM DUAL;

REM PAUSE la secuencia de solicitud es &&V_SEQ_SOLICITUD_PROCE

REM SELECT MEF_TRATAM_PACIENTE.TPA_ID,
REM        MEF_TRATAM_PACIENTE.TTE_ID,
REM        MEF_TRATAM_PACIENTE.PTR_ID,
REM        MEF_TRATAM_PACIENTE.TPA_ESTADO,
REM        MEF_TRATAM_PACIENTE.TPA_FECHA_CREACION,
REM        MEF_TRATAM_PACIENTE.TPA_OBSERVACION,
REM        MEF_TRATAM_PACIENTE.PME_ID
REM   FROM ADMINISTRATIVO.MEF_TRATAM_PACIENTE
REM  WHERE MEF_TRATAM_PACIENTE.PTR_ID = '&&V_TER_ID.';
REM
REM PAUSE REVISE SU PLANIF TRATAM
REM

PRINT v_ptr



DECLARE
   CURSOR c1
   IS
      SELECT MEF_TRATAM_PACIENTE.TPA_ID,
             MEF_TRATAM_PACIENTE.TTE_ID,
             MEF_TRATAM_PACIENTE.PTR_ID,
             MEF_TRATAM_PACIENTE.TPA_ESTADO,
             MEF_TRATAM_PACIENTE.TPA_FECHA_CREACION,
             MEF_TRATAM_PACIENTE.TPA_OBSERVACION,
             MEF_TRATAM_PACIENTE.PME_ID
        FROM ADMINISTRATIVO.MEF_TRATAM_PACIENTE
       WHERE MEF_TRATAM_PACIENTE.PTR_ID = :v_ptr;

   V_PES_ID   PLS_INTEGER := NULL;
   v_cuenta   PLS_INTEGER := 0;
BEGIN
   FOR X IN C1
   LOOP
      SELECT PES_ID
        INTO V_PES_ID
        FROM (SELECT DISTINCT *
                FROM ADMINISTRATIVO.MED_PROCEDIMIENTO_ESPSER,
                     ADMINISTRATIVO.MED_PROCEDIMIENTO,
                     ADMINISTRATIVO.AA_TABLA_EQUIV_PROCED
               WHERE     AA_TABLA_EQUIV_PROCED.PROID1NIVEL =
                            MED_PROCEDIMIENTO_ESPSER.PES_ID_FK
                     AND AA_TABLA_EQUIV_PROCED.PROID2NIVEL =
                            MED_PROCEDIMIENTO_ESPSER.PRO_ID
                     AND MED_PROCEDIMIENTO.PRO_ID =
                            MED_PROCEDIMIENTO_ESPSER.PRO_ID)
       WHERE TTE_ID = X.TTE_ID;


      --
      --


      INSERT
        INTO ADMINISTRATIVO.MED_SOLICITUD_DETALLE_PROC (
                MED_SOLICITUD_DETALLE_PROC.SDP_ID,
                MED_SOLICITUD_DETALLE_PROC.SPR_ID,
                MED_SOLICITUD_DETALLE_PROC.PES_ID,
                MED_SOLICITUD_DETALLE_PROC.PME_ID,
                MED_SOLICITUD_DETALLE_PROC.SDP_OBSERVACION,
                MED_SOLICITUD_DETALLE_PROC.SDP_ESTADO,
                MED_SOLICITUD_DETALLE_PROC.SDP_FECHA_CREACION)
      VALUES (                          /*:MED_SOLICITUD_DETALLE_PROC.SDP_ID*/
              -1,
              /*:MED_SOLICITUD_DETALLE_PROC.SPR_ID*/
              '&&V_SEQ_SOLICITUD_PROCE.',
              /*:MED_SOLICITUD_DETALLE_PROC.PES_ID*/
              V_PES_ID,
              /*:MED_SOLICITUD_DETALLE_PROC.PME_ID*/
              X.PME_ID,
              /*:MED_SOLICITUD_DETALLE_PROC.SDP_OBSERVACION*/
              X.TPA_OBSERVACION,
              /*:MED_SOLICITUD_DETALLE_PROC.SDP_ESTADO*/
              X.TPA_ESTADO,
              /*:MED_SOLICITUD_DETALLE_PROC.SDP_FECHA_CREACION*/
              X.TPA_FECHA_CREACION);
   END LOOP;
END;


REM    SELECT *
REM      FROM MED_SOLICITUD_DETALLE_PROC
REM     WHERE MED_SOLICITUD_DETALLE_PROC.SPR_ID = '&&V_SEQ_SOLICITUD_PROCE.';
REM
REM
REM
REM    SELECT *
REM      FROM MED_SOLICITUD_PROCEDIMIENTO
REM     WHERE SPR_ID = '&&V_SEQ_SOLICITUD_PROCE.';
REM



REM LA CABECERA DE TRATAMIENTO SE PASA A TURNO PROCEDIMIENTO
REM LA CABECERA DE TRATAMIENTO SE PASA A TURNO PROCEDIMIENTO
REM LA CABECERA DE TRATAMIENTO SE PASA A TURNO PROCEDIMIENTO
REM LA CABECERA DE TRATAMIENTO SE PASA A TURNO PROCEDIMIENTO
REM LA CABECERA DE TRATAMIENTO SE PASA A TURNO PROCEDIMIENTO
REM LA CABECERA DE TRATAMIENTO SE PASA A TURNO PROCEDIMIENTO

REM   SELECT MEF_CAB_TRATAM.CTR_ID,
REM          MEF_CAB_TRATAM.CTR_ORDEN_SESION,
REM          MEF_CAB_TRATAM.PTR_ID,
REM          MEF_CAB_TRATAM.CTR_FECHA,
REM          MEF_CAB_TRATAM.CTR_ESTADO,
REM          MEF_CAB_TRATAM.CTR_OBSERVACION,
REM          MEF_CAB_TRATAM.PME_ID,
REM          MEF_CAB_TRATAM.UNS_ID
REM     FROM ADMINISTRATIVO.MEF_CAB_TRATAM
REM    WHERE MEF_CAB_TRATAM.PTR_ID = '&&V_PTR_ID.'
REM ORDER BY MEF_CAB_TRATAM.CTR_ORDEN_SESION;
REM


VARIABLE v_variable VARCHAR2(100)
REM
REM
REM
REM SELECT *
REM   FROM ADMINISTRATIVO.MED_PARSCO_PERMED,
REM        ADMINISTRATIVO.CGG_DISTRIBUCION_FISICA,
REM        ADMINISTRATIVO.MED_PARAMETRIZACION_SALCON
REM  WHERE     MED_PARSCO_PERMED.PME_ID = '&&V_PME_ID.'
REM        AND CGG_DISTRIBUCION_FISICA.DFI_ID = MED_PARSCO_PERMED.DFI_ID
REM        AND CGG_DISTRIBUCION_FISICA.DFI_ID = MED_PARAMETRIZACION_SALCON.DFI_ID;
REM
REM PAUSE REVISE PA PERSONA '&&V_PME_ID.'
REM
REM
REM PAUSE la secuencia de solicitud procedimiento es &&V_SEQ_SOLICITUD_PROCE


VARIABLE  SEQ_SPRO VARCHAR2(100)
EXECUTE :SEQ_SPRO:= '&&V_SEQ_SOLICITUD_PROCE.'

SELECT :SEQ_SPRO FROM DUAL;

REM PAUSE REVISE EL BV

VARIABLE v_X VARCHAR2(100)

DECLARE
   CURSOR c1
   IS
        SELECT MEF_CAB_TRATAM.CTR_ID,
               MEF_CAB_TRATAM.CTR_ORDEN_SESION,
               MEF_CAB_TRATAM.PTR_ID,
               MEF_CAB_TRATAM.CTR_FECHA,
               MEF_CAB_TRATAM.CTR_ESTADO,
               MEF_CAB_TRATAM.CTR_OBSERVACION,
               MEF_CAB_TRATAM.PME_ID,
               MEF_CAB_TRATAM.UNS_ID
          FROM ADMINISTRATIVO.MEF_CAB_TRATAM
         WHERE MEF_CAB_TRATAM.PTR_ID = '&&V_PTR_ID.'
      ORDER BY MEF_CAB_TRATAM.CTR_ORDEN_SESION;



   v_tiene_consultorio   PLS_INTEGER;
   v_PSC                 PLS_INTEGER;

   TYPE MEF_DET_TRATAM_ IS TABLE OF MEF_DET_TRATAM%ROWTYPE;

   v_det_tra             MEF_DET_TRATAM_ := MEF_DET_TRATAM_ ();

   TYPE MEF_DET_AGRUP_ IS TABLE OF MEF_DET_AGRUP%ROWTYPE;

   V_MEF_DET_AGRUP       MEF_DET_AGRUP_ := MEF_DET_AGRUP_ ();


   v_pes_id              PLS_INTEGER;
   seq_sol_proc          PLS_INTEGER;
   V_PES_IDN1            PLS_INTEGER;
BEGIN
   FOR x IN C1
   LOOP
      SELECT COUNT (PSC_ID)
        INTO v_PSC
        FROM ADMINISTRATIVO.MED_PARSCO_PERMED,
             ADMINISTRATIVO.CGG_DISTRIBUCION_FISICA,
             ADMINISTRATIVO.MED_PARAMETRIZACION_SALCON
       WHERE     MED_PARSCO_PERMED.PME_ID = x.pme_id
             AND CGG_DISTRIBUCION_FISICA.DFI_ID = MED_PARSCO_PERMED.DFI_ID
             AND CGG_DISTRIBUCION_FISICA.DFI_ID =
                    MED_PARAMETRIZACION_SALCON.DFI_ID
             AND MED_PARSCO_PERMED.PPM_ESTADO = 'A';

      IF v_PSC = 0
      THEN
         v_PSC := NULL;
      ELSE
         SELECT PSC_ID
           INTO v_PSC
           FROM ADMINISTRATIVO.MED_PARSCO_PERMED,
                ADMINISTRATIVO.CGG_DISTRIBUCION_FISICA,
                ADMINISTRATIVO.MED_PARAMETRIZACION_SALCON
          WHERE     MED_PARSCO_PERMED.PME_ID = x.pme_id
                AND CGG_DISTRIBUCION_FISICA.DFI_ID = MED_PARSCO_PERMED.DFI_ID
                AND CGG_DISTRIBUCION_FISICA.DFI_ID =
                       MED_PARAMETRIZACION_SALCON.DFI_ID
                AND MED_PARSCO_PERMED.PPM_ESTADO = 'A';
      END IF;


      :v_X := x.pme_id;


      INSERT
        INTO ADMINISTRATIVO.MED_TURNO_PROCEDIMIENTO (
                MED_TURNO_PROCEDIMIENTO.SPR_ID,
                MED_TURNO_PROCEDIMIENTO.USU_ID,
                MED_TURNO_PROCEDIMIENTO.PSC_ID,
                MED_TURNO_PROCEDIMIENTO.TPR_NUM_SESION,
                MED_TURNO_PROCEDIMIENTO.TPR_FECHA_CREACION,
                MED_TURNO_PROCEDIMIENTO.TPR_FECHA_TURNO,
                MED_TURNO_PROCEDIMIENTO.TPR_ESTADO,
                MED_TURNO_PROCEDIMIENTO.TPR_FECHA_INACTIVACION)
      VALUES (                             /*:MED_TURNO_PROCEDIMIENTO.TPR_ID*/
              /*:MED_TURNO_PROCEDIMIENTO.SPR_ID*/
              :SEQ_SPRO,
              /*:MED_TURNO_PROCEDIMIENTO.USU_ID*/
              NULL,
              /*:MED_TURNO_PROCEDIMIENTO.PSC_ID*/
              v_PSC,
              /*:MED_TURNO_PROCEDIMIENTO.TPR_NUM_SESION*/
              X.CTR_ORDEN_SESION,
              /*:MED_TURNO_PROCEDIMIENTO.TPR_FECHA_CREACION*/
              NULL,
              /*:MED_TURNO_PROCEDIMIENTO.TPR_FECHA_TURNO*/
              X.CTR_FECHA,
              /*:MED_TURNO_PROCEDIMIENTO.TPR_ESTADO*/
              X.CTR_ESTADO,
              /*:MED_TURNO_PROCEDIMIENTO.TPR_FECHA_INACTIVACION*/
              NULL);


      SELECT MEF_DET_TRATAM.DTR_ID,
             MEF_DET_TRATAM.CTR_ID,
             MEF_DET_TRATAM.TTE_ID,
             MEF_DET_TRATAM.DTR_HORA_INICIO,
             MEF_DET_TRATAM.DTR_HORA_FIN,
             MEF_DET_TRATAM.DTR_OBSERVACION,
             MEF_DET_TRATAM.DTR_FECHA_CREACION,
             MEF_DET_TRATAM.DTR_ESTADO,
             MEF_DET_TRATAM.DTR_PROCEDIMIENTO_DESCRIP,
             MEF_DET_TRATAM.DTR_CHEQUEO,
             MEF_DET_TRATAM.PME_ID
        BULK COLLECT INTO v_det_tra
        FROM ADMINISTRATIVO.MEF_DET_TRATAM
       WHERE MEF_DET_TRATAM.CTR_ID = X.CTR_ID;

      IF v_det_tra.COUNT <> 0
      THEN
         FOR i IN 1 .. v_det_tra.COUNT
         LOOP
            SELECT pes_id
              INTO v_pes_id
              FROM ADMINISTRATIVO.MED_PROCEDIMIENTO_ESPSER,
                   ADMINISTRATIVO.MED_PROCEDIMIENTO,
                   ADMINISTRATIVO.AA_TABLA_EQUIV_PROCED
             WHERE     AA_TABLA_EQUIV_PROCED.PROID1NIVEL =
                          MED_PROCEDIMIENTO_ESPSER.PES_ID_FK
                   AND AA_TABLA_EQUIV_PROCED.PROID2NIVEL =
                          MED_PROCEDIMIENTO_ESPSER.PRO_ID
                   AND MED_PROCEDIMIENTO.PRO_ID =
                          MED_PROCEDIMIENTO_ESPSER.PRO_ID
                   AND tte_id = v_det_tra (i).tte_id;



            INSERT
              INTO ADMINISTRATIVO.MED_TURNO_DETALLE (
                      MED_TURNO_DETALLE.TDE_ID,
                      MED_TURNO_DETALLE.TPR_ID,
                      MED_TURNO_DETALLE.PES_ID,
                      MED_TURNO_DETALLE.TDE_OBSERVACION,
                      MED_TURNO_DETALLE.TDE_ESTADO,
                      MED_TURNO_DETALLE.TDE_FECHA_CREACION)
            VALUES (                             /*:MED_TURNO_DETALLE.TDE_ID*/
                    -1,                          /*:MED_TURNO_DETALLE.TPR_ID*/
                    SEQ_MED_TURNO_PROC.CURRVAL,  /*:MED_TURNO_DETALLE.PES_ID*/
                    v_pes_id,
                    /*:MED_TURNO_DETALLE.TDaE_OBSERVACION*/
                    v_det_tra (i).DTR_OBSERVACION,
                    /*:MED_TURNO_DETALLE.TDE_ESTADO*/
                    v_det_tra (i).DTR_CHEQUEO,
                    /*:MED_TURNO_DETALLE.TDE_FECHA_CREACION*/
                    v_det_tra (i).DTR_FECHA_CREACION);
         END LOOP;
      END IF;
   END LOOP;


     --
     SELECT MEF_DET_AGRUP.DAG_ID,
            MEF_DET_AGRUP.DAG_HORA_INICIO,
            MEF_DET_AGRUP.DAG_HORA_FIN,
            MEF_DET_AGRUP.DAG_ESTADO,
            MEF_DET_AGRUP.DAG_OBSERVACION,
            MEF_DET_AGRUP.CTR_ID,
            MEF_DET_AGRUP.TER_ID,
            MEF_DET_AGRUP.PME_ID
       BULK COLLECT INTO V_MEF_DET_AGRUP
       FROM ADMINISTRATIVO.MEF_DET_AGRUP
      WHERE MEF_DET_AGRUP.CTR_ID IN (SELECT MEF_CAB_TRATAM.CTR_ID
                                       FROM ADMINISTRATIVO.MEF_CAB_TRATAM
                                      WHERE MEF_CAB_TRATAM.PTR_ID = :v_ptr)
   ORDER BY 1;

   DBMS_OUTPUT.PUT_LINE (
         'uuuuuuuuuuuuuuuuuuuuuuuu = '
      || V_MEF_DET_AGRUP.COUNT
      || '   '
      || :v_ptr);

   IF V_MEF_DET_AGRUP.COUNT > 0
   THEN
      FOR I IN 1 .. V_MEF_DET_AGRUP.COUNT
      LOOP
         SELECT DISTINCT PROID1NIVEL
           INTO V_PES_IDN1
           FROM ADMINISTRATIVO.MED_PROCEDIMIENTO_ESPSER,
                ADMINISTRATIVO.MED_PROCEDIMIENTO,
                ADMINISTRATIVO.AA_TABLA_EQUIV_PROCED
          WHERE     AA_TABLA_EQUIV_PROCED.PROID1NIVEL =
                       MED_PROCEDIMIENTO_ESPSER.PES_ID_FK
                AND AA_TABLA_EQUIV_PROCED.PROID2NIVEL =
                       MED_PROCEDIMIENTO_ESPSER.PRO_ID
                AND MED_PROCEDIMIENTO.PRO_ID =
                       MED_PROCEDIMIENTO_ESPSER.PRO_ID
                AND AA_TABLA_EQUIV_PROCED.TER_ID = V_MEF_DET_AGRUP (I).TER_ID;

         INSERT
           INTO ADMINISTRATIVO.MED_TURNO_ATENCION (
                   MED_TURNO_ATENCION.TAT_ID,
                   MED_TURNO_ATENCION.TPR_ID,
                   MED_TURNO_ATENCION.PES_ID,
                   MED_TURNO_ATENCION.TAT_HORA_INICIO,
                   MED_TURNO_ATENCION.TAT_HORA_FIN,
                   MED_TURNO_ATENCION.TAT_ESTADO,
                   MED_TURNO_ATENCION.TAT_FECHA_CREACION)
         VALUES (                               /*:MED_TURNO_ATENCION.TAT_ID*/
                 -1,                            /*:MED_TURNO_ATENCION.TPR_ID*/
                 SEQ_MED_TURNO_PROC.CURRVAL,    /*:MED_TURNO_ATENCION.PES_ID*/
                 V_PES_IDN1,
                 /*:MED_TURNO_ATENCION.TAT_HORA_INICIO*/
                 V_MEF_DET_AGRUP (I).DAG_HORA_INICIO,
                 /*:MED_TURNO_ATENCION.TAT_HORA_FIN*/
                 V_MEF_DET_AGRUP (I).DAG_HORA_FIN,
                 /*:MED_TURNO_ATENCION.TAT_ESTADO*/
                 V_MEF_DET_AGRUP (I).DAG_ESTADO,
                 /*:MED_TURNO_ATENCION.TAT_FECHA_CREACION*/
                 V_MEF_DET_AGRUP (I).DAG_HORA_INICIO);
      END LOOP;
   END IF;
--

END;

REM
REM    SELECT :v_X HHHHH FROM DUAL;
REM
REM    REM PAUSE '&&V_SEQ_SOLICITUD_PROCE'
REM
REM      SELECT *
REM        FROM MED_TURNO_PROCEDIMIENTO
REM       WHERE SPR_ID = '&&V_SEQ_SOLICITUD_PROCE'
REM    ORDER BY TPR_NUM_SESION;
REM
REM    SELECT * FROM ADMINISTRATIVO.MED_TURNO_ATENCION;
REM

COLUMN seqpa HEADING "seqpa" FORMAT A10  TRUNC  NEW_VALUE V_seqpa

SELECT SEQ_MED_SOLICITUD_PROC.CURRVAL seqpa FROM DUAL;


COLUMN a0 HEADING "a0" FORMAT A10  TRUNC  NEW_VALUE V_a0
COLUMN a1 HEADING "a1" FORMAT A10  TRUNC  NEW_VALUE V_a1
COLUMN b0 HEADING "b0" FORMAT A10  TRUNC  NEW_VALUE V_b0
COLUMN b1 HEADING "b1" FORMAT A10  TRUNC  NEW_VALUE V_b1
COLUMN c0 HEADING "c0" FORMAT A10  TRUNC  NEW_VALUE V_c0
COLUMN c1 HEADING "c1" FORMAT A10  TRUNC  NEW_VALUE V_c1
COLUMN d0 HEADING "d0" FORMAT A10  TRUNC  NEW_VALUE V_d0
COLUMN d1 HEADING "d1" FORMAT A10  TRUNC  NEW_VALUE V_d1
COLUMN e0 HEADING "e0" FORMAT A10  TRUNC  NEW_VALUE V_e0
COLUMN e1 HEADING "e1" FORMAT A10  TRUNC  NEW_VALUE V_e1



SELECT 'CUENTA SOL PROCED', COUNT (*) a0
  FROM ADMINISTRATIVO.MED_SOLICITUD_PROCEDIMIENTO
 WHERE MED_SOLICITUD_PROCEDIMIENTO.SPR_ID = '&&V_seqpa.';

SELECT 'MEF_PLANIF_TRATAM', COUNT (*) a1
  FROM MEF_PLANIF_TRATAM
 WHERE MEF_PLANIF_TRATAM.PTR_ID = '&&V_PTR_ID';



  SELECT 'MED_TURNO_PROCEDIMIENTO' MTP, COUNT (*) b0
    FROM ADMINISTRATIVO.MED_TURNO_PROCEDIMIENTO
   WHERE MED_TURNO_PROCEDIMIENTO.SPR_ID = '&&V_seqpa.'
ORDER BY MED_TURNO_PROCEDIMIENTO.TPR_NUM_SESION;



SELECT 'MEF_CAB_TRATAM', COUNT (*) b1
  FROM MEF_CAB_TRATAM
 WHERE MEF_CAB_TRATAM.PTR_ID = '&&V_PTR_ID';



  SELECT 'MED_TURNO_DETALLE' MTD, COUNT (*) c0
    FROM ADMINISTRATIVO.MED_TURNO_PROCEDIMIENTO
         INNER JOIN ADMINISTRATIVO.MED_TURNO_DETALLE
            ON (MED_TURNO_PROCEDIMIENTO.TPR_ID = MED_TURNO_DETALLE.TPR_ID)
   WHERE MED_TURNO_PROCEDIMIENTO.SPR_ID = '&&V_seqpa.'
ORDER BY MED_TURNO_PROCEDIMIENTO.TPR_NUM_SESION;



SELECT 'MEF_DET_TRATAM', COUNT (*) c1
  FROM MEF_DET_TRATAM
 WHERE MEF_DET_TRATAM.CTR_ID IN (SELECT MEF_CAB_TRATAM.CTR_ID
                                   FROM ADMINISTRATIVO.MEF_CAB_TRATAM
                                  WHERE MEF_CAB_TRATAM.PTR_ID = '&&V_PTR_ID');


  SELECT 'MED_TURNO_ATENCION' MTA, COUNT (*) d0
    FROM ADMINISTRATIVO.MED_TURNO_PROCEDIMIENTO
         INNER JOIN ADMINISTRATIVO.MED_TURNO_ATENCION
            ON (MED_TURNO_PROCEDIMIENTO.TPR_ID = MED_TURNO_ATENCION.TPR_ID)
   WHERE MED_TURNO_PROCEDIMIENTO.SPR_ID = '&&V_seqpa.'
ORDER BY MED_TURNO_PROCEDIMIENTO.TPR_NUM_SESION;

SELECT 'MEF_DET_AGRUP', COUNT (*) d1
  FROM MEF_DET_AGRUP
 WHERE MEF_DET_AGRUP.CTR_ID IN (SELECT MEF_CAB_TRATAM.CTR_ID
                                  FROM ADMINISTRATIVO.MEF_CAB_TRATAM
                                 WHERE MEF_CAB_TRATAM.PTR_ID = '&&V_PTR_ID');



SELECT 'MED_SOLICITUD_DETALLE_PROC' SDPROC, COUNT (*) e0
  FROM ADMINISTRATIVO.MED_SOLICITUD_DETALLE_PROC
 WHERE MED_SOLICITUD_DETALLE_PROC.SPR_ID = '&&V_seqpa.';

SELECT 'ADMINISTRATIVO.MEF_TRATAM_PACIENTE', COUNT (*) e1
  FROM ADMINISTRATIVO.MEF_TRATAM_PACIENTE
 WHERE ADMINISTRATIVO.MEF_TRATAM_PACIENTE.PTR_ID = '&&V_PTR_ID';

VARIABLE v_crear VARCHAR2(100)



BEGIN
   IF     '&&V_a0' = '&&V_a1'
      AND '&&V_b0' = '&&V_b1'
      AND '&&V_c0' = '&&V_c1'
      AND '&&V_d0' = '&&V_d1'
      AND '&&V_e0' = '&&V_e1'
   THEN 
--      COMMIT;
      :v_variable := 'SI';
      DBMS_OUTPUT.PUT_LINE (
         '**************SE GRABO EL REGISTRO**************');
   ELSE
      :v_variable := 'NO';
   END IF;
END;



SPOOL OFF;

COLUMN GRAB HEADING "GRAB" FORMAT A10  TRUNC  NEW_VALUE V_GRAB

SELECT :v_variable GRAB FROM DUAL;


ROLLBACK;

COLUMN fecha FORMAT a20 NEW_VALUE fec NOPRINT

SELECT TO_CHAR (SYSDATE, 'yyyy-mm-dd-hh24-mi-ss') fecha FROM DUAL;



SPOOL  C:\logs\FALLAS\&&V_GRAB._&&1._&&fec..txt

SELECT '&&1' SPR_ID FROM DUAL;


SPOOL OFF;