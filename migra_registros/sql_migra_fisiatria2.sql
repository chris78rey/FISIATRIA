/* Formatted on 13/06/2016 12:50:28 (QP5 v5.252.13127.32867) */
SET DEFINE ~
WHENEVER SQLERROR EXIT FAILURE ROLLBACK;
SET SERVEROUTPUT ON
SET LINESIZE 2000
SET PAGESIZE 0
SET HEADING ON;
SET VERIFY ON;
SET ECHO ON;
SET FEEDBACK ON;
SET TIMING ON;
SET SQLPROMPT "";

COLUMN fecha FORMAT a20 NEW_VALUE fec NOPRINT

SELECT TO_CHAR (SYSDATE, 'yyyy-mm-dd-hh24-mi-ss') fecha FROM DUAL;

WHENEVER SQLERROR EXIT FAILURE ROLLBACK;
SET SERVEROUTPUT ON
SET LINESIZE 1000
SET PAGESIZE 1000
SET ECHO OFF
SET HEADING ON
SET FEEDBACK OFF
SET TIMING OFF
SET VERIFY OFF
SPOOL  C:\logs\LISTA_MIGRA_FISIATRIA_~~fec..txt
COLUMN TRA_ID FORMAT A20 TRUNC NEW_VALUE V_TRA_ID
COLUMN TRA_DESCRIPCION FORMAT A20 TRUNC NEW_VALUE V_TRA_DESCRIPCION
COLUMN TRA_ESTADO FORMAT A20 TRUNC NEW_VALUE V_TRA_ESTADO
COLUMN TRA_CODIGO FORMAT A20 TRUNC NEW_VALUE V_TRA_CODIGO
COLUMN ESE_ID FORMAT A20 TRUNC NEW_VALUE V_ESE_ID
COLUMN TTE_ID FORMAT A20 TRUNC NEW_VALUE V_TTE_ID
COLUMN TTE_UNIDAD FORMAT A20 TRUNC NEW_VALUE V_TTE_UNIDAD
COLUMN TTE_REPETICION FORMAT A20 TRUNC NEW_VALUE V_TTE_REPETICION
COLUMN TTE_ESTADO FORMAT A20 TRUNC NEW_VALUE V_TTE_ESTADO
COLUMN TER_ID FORMAT A20 TRUNC NEW_VALUE V_TER_ID
COLUMN TRA_ID FORMAT A20 TRUNC NEW_VALUE V_TRA_ID
COLUMN TTE_TIPO FORMAT A20 TRUNC NEW_VALUE V_TTE_TIPO
COLUMN TER_ID FORMAT A20 TRUNC NEW_VALUE V_TER_ID
COLUMN ESE_ID FORMAT A20 TRUNC NEW_VALUE V_ESE_ID
COLUMN TER_DESCRIPCION FORMAT A20 TRUNC NEW_VALUE V_TER_DESCRIPCION
COLUMN TER_ESTADO FORMAT A20 TRUNC NEW_VALUE V_TER_ESTADO
COLUMN TER_ID_PADRE FORMAT A20 TRUNC NEW_VALUE V_TER_ID_PADRE
COLUMN TER_ULTIMO_NIVEL FORMAT A20 TRUNC NEW_VALUE V_TER_ULTIMO_NIVEL
COLUMN TER_CODIGO FORMAT A20 TRUNC NEW_VALUE V_TER_CODIGO
COLUMN TER_NUM_TERAPIA FORMAT A20 TRUNC NEW_VALUE V_TER_NUM_TERAPIA
COLUMN TER_CODIGO_SC FORMAT A20 TRUNC NEW_VALUE V_TER_CODIGO_SC


  SELECT MED_TRATAM_TERAPIA.TTE_ID,
         MED_TERAPIA.TER_ID,
         MED_TERAPIA.ESE_ID,
         MED_TERAPIA.TER_DESCRIPCION,
         MED_TERAPIA.TER_ESTADO,
         MED_TERAPIA.TER_ID_PADRE,
         MED_TERAPIA.TER_ULTIMO_NIVEL,
         MED_TERAPIA.TER_CODIGO,
         MED_TERAPIA.TER_NUM_TERAPIA,
         MED_TERAPIA.TER_CODIGO_SC,
         MED_TRATAMIENTO.TRA_ID,
         MED_TRATAMIENTO.TRA_DESCRIPCION,
         MED_TRATAMIENTO.TRA_ESTADO,
         MED_TRATAMIENTO.TRA_CODIGO,
         MED_TRATAM_TERAPIA.TTE_UNIDAD,
         MED_TRATAM_TERAPIA.TTE_REPETICION,
         MED_TRATAM_TERAPIA.TTE_ESTADO,
         MED_TRATAM_TERAPIA.TTE_TIPO
    FROM ADMINISTRATIVO.MED_TRATAMIENTO
         INNER JOIN ADMINISTRATIVO.MED_TRATAM_TERAPIA
            ON (MED_TRATAMIENTO.TRA_ID = MED_TRATAM_TERAPIA.TRA_ID)
         INNER JOIN ADMINISTRATIVO.MED_TERAPIA
            ON (MED_TERAPIA.TER_ID = MED_TRATAM_TERAPIA.TER_ID)
ORDER BY MED_TERAPIA.TER_DESCRIPCION, MED_TRATAMIENTO.TRA_DESCRIPCION;


CREATE OR REPLACE VIEW V_PROCED_TRES_NIV
AS
   SELECT NIVEL0.PES_ID NIVEL0_PES_ID,
          NIVEL0.PRO_ID NIVEL0_PRO_ID,
          NIVEL0.ESE_ID NIVEL0_ESE_ID,
          NIVEL0.PES_ID_FK NIVEL0_PES_ID_FK,
          NIVEL0.PES_NIVEL NIVEL0_PES_NIVEL,
          NIVEL0.PES_TIPO NIVEL0_PES_TIPO,
          NIVEL0.PES_ESTADO NIVEL0_PES_ESTADO,
          NIVEL0.PES_FECHA_CREACION NIVEL0_PES_FECHA_CREACION,
          NIVEL0.PES_ULTIMO_NIVEL NIVEL0_PES_ULTIMO_NIVEL,
          NIVEL1.PES_ID NIVEL1_PES_ID,
          NIVEL1.PRO_ID NIVEL1_PRO_ID,
          NIVEL1.ESE_ID NIVEL1_ESE_ID,
          NIVEL1.PES_ID_FK NIVEL1_PES_ID_FK,
          NIVEL1.PES_NIVEL NIVEL1_PES_NIVEL,
          NIVEL1.PES_TIPO NIVEL1_PES_TIPO,
          NIVEL1.PES_ESTADO NIVEL1_PES_ESTADO,
          NIVEL1.PES_FECHA_CREACION NIVEL1_PES_FECHA_CREACION,
          NIVEL1.PES_ULTIMO_NIVEL NIVEL1_PES_ULTIMO_NIVEL,
          NIVEL2.PES_ID NIVEL2_PES_ID,
          NIVEL2.PRO_ID NIVEL2_PRO_ID,
          NIVEL2.ESE_ID NIVEL2_ESE_ID,
          NIVEL2.PES_ID_FK NIVEL2_PES_ID_FK,
          NIVEL2.PES_NIVEL NIVEL2_PES_NIVEL,
          NIVEL2.PES_TIPO NIVEL2_PES_TIPO,
          NIVEL2.PES_ESTADO NIVEL2_PES_ESTADO,
          NIVEL2.PES_FECHA_CREACION NIVEL2_PES_FECHA_CREACION,
          NIVEL2.PES_ULTIMO_NIVEL NIVEL2_PES_ULTIMO_NIVEL
     FROM ADMINISTRATIVO.MED_PROCEDIMIENTO_ESPSER NIVEL1
          INNER JOIN ADMINISTRATIVO.MED_PROCEDIMIENTO_ESPSER NIVEL2
             ON (NIVEL1.PES_ID = NIVEL2.PES_ID_FK)
          INNER JOIN ADMINISTRATIVO.MED_PROCEDIMIENTO_ESPSER NIVEL0
             ON (NIVEL0.PES_ID = NIVEL1.PES_ID_FK);


  SELECT P0.PRO_ID,
         P0.PRO_DESCRIPCION,
         P1.PRO_ID,
         P1.PRO_DESCRIPCION,
         P2.PRO_ID,
         P2.PRO_DESCRIPCION
    FROM ADMINISTRATIVO.V_PROCED_TRES_NIV,
         ADMINISTRATIVO.MED_PROCEDIMIENTO P0,
         ADMINISTRATIVO.MED_PROCEDIMIENTO P1,
         ADMINISTRATIVO.MED_PROCEDIMIENTO P2
   WHERE     P2.PRO_ID = V_PROCED_TRES_NIV.NIVEL2_PRO_ID
         AND P1.PRO_ID = V_PROCED_TRES_NIV.NIVEL1_PRO_ID
         AND P0.PRO_ID = V_PROCED_TRES_NIV.NIVEL0_PRO_ID
ORDER BY P0.PRO_DESCRIPCION, P1.PRO_DESCRIPCION, P2.PRO_DESCRIPCION;

SPOOL OFF;

ROLLBACK;